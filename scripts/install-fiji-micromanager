#!/usr/bin/env bash
set -eu
# see https://www.micro-manager.org/wiki/Build_on_MacOS_X#Getting_Micro-Manager_source_code
# and https://www.micro-manager.org/wiki/Download%20Micro-Manager_Latest%20Release

# Configuration variables
fijidir="${fijidir:-/Applications/Fiji.app}"
port=4000
patchdir=$(cd $(dirname "$0")/../patches && pwd)

if [[ $(uname -s) == Darwin ]]; then
  # install dependencies on mac using homebrew
  if [[ -z $(command -v brew) ]]; then
    ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)"
  fi
  brew tap homebrew/science
  brew install autoconf automake libtool pkg-config swig subversion boost libusb-compat hidapi libdc1394 libgphoto2 freeimage opencv python numpy git maven ant msgpack
  brew cask install java

  # install fiji on mac
  wget http://jenkins.imagej.net/job/Stable-Fiji-MacOSX/lastSuccessfulBuild/artifact/fiji-macosx.dmg
  hdiutil attach fiji-macosx.dmg
  if test -e "$fijidir"; then rm -rv "$fijidir"; fi
  cp -Rv /Volumes/Fiji/Fiji.app "$fijidir"
  hdiutil detach /Volumes/Fiji
  
  # add remote debugging support to Info.plist
  cd "$fijidir"
  defaults write "$PWD"/Contents/Info fiji -dict-add JVMOptions "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=$port"
  plutil -convert xml1 Contents/Info.plist
  cd -
elif [[ $(uname -s) == Linux && $(lsb_release -d) =~ Ubuntu ]]; then
  # install dependencies on ubuntu:
  sudo apt-get install build-essential autoconf automake libtool pkg-config swig subversion libboost-all-dev libusb-dev libhidapi-dev libdc1394-22-dev libgphoto2-dev libfreeimage-dev libopencv-dev python python-numpy python3 python3-numpy git maven ant libmsgpack-dev openjdk-8-jdk libusb-1.0.0-dev gphoto2

  # fix for libhidapi not being detected by mm config scripts
  sudo ln -sv /usr/lib/"$(uname -m)"-linux-gnu/libhidapi-libusb.so /usr/lib/x86_64-linux-gnu/libhidapi.so
  
  if [[ $(uname -m) == x86_64 ]]; then
    wget http://jenkins.imagej.net/job/Stable-Fiji-Java-8/lastSuccessfulBuild/artifact/fiji-linux64.zip
    unzip fiji-linux64.zip
  fijidir="$PWD/Fiji.app"
  elif [[ $(uname -m) == i686 ]]; then
    wget http://jenkins.imagej.net/job/Stable-Fiji-Java-8/lastSuccessfulBuild/artifact/fiji-linux32.zip
    unzip fiji-linux32.zip
  fijidir="$PWD/Fiji.app"
  else 
    echo "Unsupported architecture: $(uname -m)" >&2
    exit 1
  fi
else
  echo "Unsupported OS: $(uname -a)" >&2
  exit 1
fi

#install micro-manager from source
#export JAVA_HOME=$(/usr/libexec/java_home)
mkdir -pv micromanager
cd micromanager
svn --username guest --password guest checkout https://valelab.ucsf.edu/svn/micromanager2/trunk micromanager
mkdir -pv 3rdpartypublic
svn --username guest --password guest checkout https://valelab.ucsf.edu/svn/3rdpartypublic/classext 3rdpartypublic/classext
cd micromanager
./autogen.sh
./configure --enable-imagej-plugin="$fijidir" --with-ij-jar="$(echo "$fijidir"/jars/ij*.jar)"
make fetchdeps
# apply patches
if [[ $(uname -ms) == 'Linux x86_64' ]]; then
  patch -p1 <"$patchdir"/linux64-gphoto-setpaths.patch
elif [[ $(uname -ms) == 'Linux i686' ]]; then
  patch -p1 <"$patchdir"/linux32-gphoto-setpaths.patch
elif [[ $(uname -s) == 'Darwin' ]]; then
  patch -p1 <"$patchdir"/disable-disk-space-check.patch
fi
make -j
make install
