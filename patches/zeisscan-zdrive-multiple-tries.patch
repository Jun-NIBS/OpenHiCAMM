Index: ZeissCAN.cpp
===================================================================
--- ZeissCAN.cpp	(revision 16290)
+++ ZeissCAN.cpp	(working copy)
@@ -44,6 +44,8 @@
 ZeissHub g_hub;
 ZeissTurret g_turret;
 
+static const int SLEEP_TIME = 10000;
+
 using namespace std;
 
 ///////////////////////////////////////////////////////////////////////////////
@@ -3215,19 +3217,29 @@
    // the hard part is to get the formatting of the string right.
    // it is a hex number from 800000 .. 7FFFFF, where everything larger than 800000 is a negative number!?
    // We can speed up communication by skipping leading 0s, but that makes the following more complicated:
-   char tmp[98];
-   // convert the steps into a twos-complement 6bit number
-   if (steps<0)
-      steps = steps+0xffffff+1;
-   snprintf(tmp, 9, "%08lX", steps);
-   string tmp2 = tmp;
-   ostringstream cmd;
-   cmd << "FPZT" << tmp2.substr(2,6).c_str();
-   int ret = g_hub.ExecuteCommand(*this, *GetCoreCallback(),  cmd.str().c_str());
-   if (ret != DEVICE_OK)
+   int ret = DEVICE_OK;
+   int tries = 0;
+   const int MAX_TRIES = 100;
+   while (tries++ < MAX_TRIES) {
+      char tmp[98];
+      // convert the steps into a twos-complement 6bit number
+      if (steps<0)
+          steps = steps+0xffffff+1;
+      snprintf(tmp, 9, "%08lX", steps);
+      string tmp2 = tmp;
+      ostringstream cmd;
+      cmd << "FPZT" << tmp2.substr(2,6).c_str();
+      ret = g_hub.ExecuteCommand(*this, *GetCoreCallback(),  cmd.str().c_str());
+      if (ret != DEVICE_OK) {
+         ostringstream os;
+         os << "FocusStage::SetPositionSteps FPZT got ret code " << ret << ", trying again " << tries << "/" << MAX_TRIES;
+         this->LogMessage(os.str().c_str());
+         CDeviceUtils::SleepMs(SLEEP_TIME);
+         continue;
+      }
       return ret;
-
-   return DEVICE_OK;
+   }
+   return ret;
 }
 
 /*
@@ -3235,31 +3247,52 @@
  */
 int FocusStage::GetPositionSteps(long& steps)
 {
-   const char* cmd ="FPZp" ;
-   int ret = g_hub.ExecuteCommand(*this, *GetCoreCallback(),  cmd);
-   if (ret != DEVICE_OK)
-      return ret;
+   int ret = DEVICE_OK;
+   int tries = 0;
+   const int MAX_TRIES = 100;
+   while (tries++ < MAX_TRIES) {
+      const char* cmd ="FPZp" ;
+      ret = g_hub.ExecuteCommand(*this, *GetCoreCallback(),  cmd);
+      if (ret != DEVICE_OK) {
+          ostringstream os;
+          os << "FocusStage::GetPositionSteps FPZp got ret code " << ret << ", trying again " << tries << "/" << MAX_TRIES;
+          this->LogMessage(os.str().c_str());
+          CDeviceUtils::SleepMs(SLEEP_TIME);
+          continue;
+      }
 
-   string response;
-   ret = g_hub.GetAnswer(*this, *GetCoreCallback(), response);
-   if (ret != DEVICE_OK)
-      return ret;
+      string response;
+      ret = g_hub.GetAnswer(*this, *GetCoreCallback(), response);
+      if (ret != DEVICE_OK) {
+          ostringstream os;
+          os << "FocusStage::GetPositionSteps FPZp response got ret code " << ret << ", trying again " << tries << "/" << MAX_TRIES;
+          this->LogMessage(os.str().c_str());
+          CDeviceUtils::SleepMs(SLEEP_TIME);
+          continue;
+      }
 
-   if (response.substr(0,2) == "PF") 
-   {
-      steps = strtol(response.substr(2).c_str(), NULL, 16);
-   }
-   else  
-      return ERR_UNEXPECTED_ANSWER;
+      if (response.substr(0,2) == "PF") 
+      {
+          steps = strtol(response.substr(2).c_str(), NULL, 16);
+      }
+      else { 
+          ret = ERR_UNEXPECTED_ANSWER;
+          ostringstream os;
+          os << "FocusStage::GetPositionSteps PF response got ret code " << ret << ", trying again " << tries << "/" << MAX_TRIES;
+          this->LogMessage(os.str().c_str());
+          CDeviceUtils::SleepMs(SLEEP_TIME);
+          continue;
+      }
 
-   // To 'translate' 'negative' numbers according to the Zeiss schema (there must be a more elegant way of doing this:
-   long sign = strtol(response.substr(2,1).c_str(), NULL, 16);
-   if (sign > 7)  // negative numbers
-   {
-      steps = steps - 0xFFFFFF - 1;
+      // To 'translate' 'negative' numbers according to the Zeiss schema (there must be a more elegant way of doing this:
+      long sign = strtol(response.substr(2,1).c_str(), NULL, 16);
+      if (sign > 7)  // negative numbers
+      {
+          steps = steps - 0xFFFFFF - 1;
+      }
+      return ret;
    }
-
-   return DEVICE_OK;
+   return ret;
 }
 
 int FocusStage::SetOrigin()
